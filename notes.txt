
Примерный минимум для ассемблера

.mark: - метка
CALL - вызов функции по метке
RET - возврат из вызова

MOV A, B - перенести значение из регистра A в регистр B
MOV A, [B] - перенести  значение из регистра A в ячейку памяти по адресу в регистре B
ADD B, C - прибавить значение B к C
INC A - увеличить значение A на 1
DEC A - уменьшить значение A на 1
JMP .mark - перейти к метке
JZ A .mark - перейти к метке если A равно 0 (jump if zero)
JNZ A .mark - перейти к метке если A не равно 0 (jump if not zero)

PUSH A, B - поместить на стек по адресу A значение B
POP A, B - забрать со стека по адресу A значение в B

Регистры:
A, B, C, D - основные
S - регистр стека данных (от Stack)
X - регистр стека вызовов (от eXecution)
I - регистр инструкций (Instruction)






Пример какой-то:

.main:
    MOV A, B
    ADD B, C
    INC A
    CALL func
    JZ A branch
    JNZ B branch
    .branch:
    RET

.func:
    RET